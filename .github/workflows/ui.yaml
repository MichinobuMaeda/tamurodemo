name: UI CI/CD
on:
  push:
    paths:
      - 'public/**'
      - 'src/**'
      - 'tests/unit/**'
      - '*.config.js'
      - 'package.json'
      - 'yarn.lock'
      - 'babel.config.js'
      - 'firebase.json'
      - '.github/workflows/ui.yaml'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-ui-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Get yarn cache
        uses: actions/cache@v2
        id: yarn-ui-cache
        with:
          path: ${{ steps.yarn-ui-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-ui-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-ui-

      - name: Get emulator cache
        uses: actions/cache@v2
        id: emulator-cache
        with:
          path: /home/runner/.cache/firebase/emulators
          key: ${{ runner.os }}-emulator-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-emulator-

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Use yarn
        run: npm -g i yarn

      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        run: yarn --frozen-lockfile

      - name: Get yarn cache directory path
        id: yarn-functions-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-functions-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-functions-${{ hashFiles('functions/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-functions-

      - name: Install dependencies for functions
        working-directory: ${{ github.workspace }}/functions
        run: yarn --frozen-lockfile

      - name: Set Firebase API Key
        env:
          API_KEY: ${{ secrets.WEB_API_KEY }}
        run: echo "export default '$API_KEY'" > src/plugins/firebase-api-key.js

      - name: Set version to UI
        run: echo "export default '$(echo $GITHUB_SHA | cut -c1-7)'" > src/conf/version.js

      - name: Set version to service-worker
        run: sed s/const\ cacheName\ =\ '.*'/const\ cacheName\ =\ \'$(echo $GITHUB_SHA | cut -c1-7)\'/g -i public/service-worker.js

      - name: Unit test
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}
        working-directory: ${{ github.workspace }}
        run: yarn test:unit:ci

      - name: Build UI
        run: yarn build

      - name: Set version to Hosting
        run: echo "{\"version\":\"$(echo $GITHUB_SHA | cut -c1-7)\"}" > dist/version.json

      - name: Deploy UI
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}
        working-directory: ${{ github.workspace }}
        run: yarn deploy --only hosting --token "$FIREBASE_TOKEN"

      - name: Set version to DB
        env:
          API_KEY: ${{ secrets.WEB_API_KEY }}
        run: curl https://tamuro02.web.app/updateServiceVersion\?key\=$API_KEY
